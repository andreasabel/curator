image: registry.gitlab.fpcomplete.com/fpco/default-build-image:7293

stages:
  - build
  - deploy

variables:
  STACK_ROOT: "${CI_PROJECT_DIR}/.stack-root"
  DEPLOYMENT_IMAGE: "${CI_REGISTRY_IMAGE}:${CI_BUILD_REF_SLUG}_${CI_PIPELINE_ID}"
  DEPLOYMENT_NAME: "casa-curator-prod"
  CACHE_S3_PREFIX: "curator-gitlab-ci-cache"
  S3_BUCKET: "download.fpcomplete.com"
  GIT_BRANCH: ${CI_PROJECT_DIR}
  BASE_BRANCH: ci

# This creates anchors for bits of script that are reused between builds
.anchors:
  - &IMAGEUPGRADE docker build -t "${DEPLOYMENT_IMAGE}" etc/docker &&
    docker login -u gitlab-ci-token -p "${CI_BUILD_TOKEN}" "${CI_REGISTRY}" &&
    docker push "${DEPLOYMENT_IMAGE}"
  # The KUBE_* variables are set by Gitlab's Kubernetes deployment service
  - &KUBELOGIN echo "$KUBE_CA_PEM" >"$HOME/ca.pem" &&
    kubectl config set-cluster cluster --server="$KUBE_URL" --certificate-authority="$HOME/ca.pem" &&
    kubectl config set-credentials cluster --token="$KUBE_TOKEN" && kubectl config set-context cluster --cluster=cluster --user=cluster --namespace="$KUBE_NAMESPACE" &&
    kubectl config use-context cluster
  - &HELMUPGRADE helm --tiller-namespace ${KUBE_NAMESPACE} upgrade --install --force "${DEPLOYMENT_NAME}" etc/helm --set hostEnvVar="${CASA_SERVICE}HOST" --set authEnvVar="${CASA_SERVICE}PORT_AUTHORIZED_PORT" --set portEnvVar="${CASA_SERVICE}PORT_PORT" --set name="${DEPLOYMENT_NAME}" --set app="${DEPLOYMENT_APP}" --set image.image="${DEPLOYMENT_IMAGE}" --values etc/helm/values/$CI_ENVIRONMENT_NAME.yaml --namespace ${KUBE_NAMESPACE}
  - &HELMCHECK helm --tiller-namespace ${KUBE_NAMESPACE} ls &&
    helm --tiller-namespace ${KUBE_NAMESPACE} status "${DEPLOYMENT_NAME}"
  - &ZIPFILES bzip2 -zk etc/docker/_artifacts/* &&
    mkdir -p etc/docker/_artifacts/bz2 &&
    mv etc/docker/_artifacts/*.bz2 etc/docker/_artifacts/bz2

build:
  stage: build
  script:
    # Clear *_TOKEN variables during code build so that compile-time code can't access them
    - cache-s3 restore stack
    - cache-s3 restore stack work
    - etc/scripts/stage_docker.sh --install-ghc --test
    - cache-s3 save stack
    - cache-s3 save stack work
  artifacts:
    name: "${CI_BUILD_REF_SLUG}_${CI_PIPELINE_ID}"
    paths:
      - etc/docker/_artifacts/

deploy_prod_s3:
  stage: deploy
  only:
    - master
  environment:
    name: production
  before_script:
    - *ZIPFILES
  script:
    - aws s3 cp --acl=public-read etc/docker/_artifacts/bz2/curator.bz2 s3://${CI_S3_BUCKET}/${CI_S3_DIRECTORY}/curator-latest-linux-amd64.bz2
    - aws s3 cp --acl=public-read etc/docker/_artifacts/bz2/casa-curator.bz2 s3://${CI_S3_BUCKET}/${CI_S3_DIRECTORY}/casa-curator-latest-linux-amd64.bz2
    - aws s3 cp --acl=public-read etc/docker/_artifacts/bz2/curator.bz2 s3://${CI_S3_BUCKET}/${CI_S3_DIRECTORY}/curator-${CI_BUILD_TAG}-linux-amd64.bz2
    - aws s3 cp --acl=public-read etc/docker/_artifacts/bz2/casa-curator.bz2 s3://${CI_S3_BUCKET}/${CI_S3_DIRECTORY}/casa-curator-${CI_BUILD_TAG}-linux-amd64.bz2

deploy_ci_s3:
  stage: deploy
  only:
    - ci
  environment:
    name: staging
  before_script:
    - *ZIPFILES
  script:
    - aws s3 cp --acl=public-read etc/docker/_artifacts/bz2/curator.bz2 s3://${CI_S3_BUCKET}/${CI_S3_DIRECTORY}/curator-ci-latest-linux-amd64.bz2
    - aws s3 cp --acl=public-read etc/docker/_artifacts/bz2/casa-curator.bz2 s3://${CI_S3_BUCKET}/${CI_S3_DIRECTORY}/casa-curator-ci-latest-linux-amd64.bz2

deploy_prod:
  stage: deploy
  only:
    - master
  environment:
    name: production
  variables:
    KUBE_NAMESPACE: "fpco-public"
    DEPLOYMENT_NAME: "casa-curator-prod"
    CASA_SERVICE: "CASA_SERVER_PROD_SERVICE_"
  before_script:
    - *IMAGEUPGRADE
    - docker tag "${DEPLOYMENT_IMAGE}" "${CI_REGISTRY_IMAGE}:latest"
    - docker push "${CI_REGISTRY_IMAGE}:latest"
  script:
    - export
      KUBE_CA_PEM="$PROD_V2_KUBE_CA_PEM"
      KUBE_URL="$PROD_V2_KUBE_URL"
      KUBE_TOKEN="$PROD_V2_KUBE_TOKEN"
      KUBE_NAMESPACE="$PROD_V2_KUBE_NAMESPACE"
    - *KUBELOGIN
    - *HELMUPGRADE
    - *HELMCHECK

deploy_ci:
  stage: deploy
  only:
    - ci
  environment:
    name: staging
  variables:
    KUBE_NAMESPACE: "fpco-public"
    DEPLOYMENT_NAME: "casa-curator-ci"
    CASA_SERVICE: "CASA_SERVER_CI_SERVICE_"
  before_script:
    - *IMAGEUPGRADE
    - docker tag "${DEPLOYMENT_IMAGE}" "${CI_REGISTRY_IMAGE}:ci-cron"
    - docker push "${CI_REGISTRY_IMAGE}:ci-cron"
  script:
    - *HELMUPGRADE
    - *HELMCHECK
